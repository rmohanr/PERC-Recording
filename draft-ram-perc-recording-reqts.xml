<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<!--rfc category="info" ipr="full3978"-->
<rfc category="std" docName="draft-ram-dispatch-perc-recording-reqts" ipr="trust200902">
  <front>
    <title abbrev="Requirement for recording in PERC">Requirements for recording in Privacy Based RTP conferencing environment</title>

    <author fullname="Ram Mohan Ravindranath" initials="R."
            surname="Ravindranath">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>Cessna Business Park</street>

          <street>Sarjapur-Marathahalli Outer Ring Road</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>rmohanr@cisco.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Varthur Hobli</street>

          <street>Sarjapur Marathalli Outer Ring Road</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>tireddy@cisco.com</email>
      </address>
    </author>

    <date year="2015" />

    <area>Real-time Applications and Infrastructre (RAI)</area>

    <workgroup>DISPATCH</workgroup>

    <abstract>
      <t> Session recording is a critical requirement in many business
   communications environments, such as call centers and financial
   trading floors.  In some of these environments, all calls must be
   recorded for regulatory and compliance reasons.  In others, calls may
   be recorded for quality control or business analytics.</t>

      <t>Recording is typically performed by sending a copy of the session
   media to the recording devices. This document defines requirements for recording in
    Privacy Based RTP conferencing environment.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Session recording is a critical operational requirement in many
   businesses, especially where voice is used as a medium for commerce
   and customer support.  A prime example where voice is used for trade
   is the financial industry.  The call recording requirements in this
   industry are quite stringent.  The recorded calls are used for
   dispute resolution and compliance.  Other businesses, such as
   customer support call centers, typically employ call recording for
   quality control or business analytics, with different requirements.</t>
   
   <t>While recording is critical operation in many businesses, respecting the privacy
    rights and wishes of users engaged in a call is of paramount importance.  In many 
    jurisdictions, participants have a right to know that the session is being recorded or
     might be recorded, and they have a right to opt out, either by terminating the
   call or by demanding that the call not be recorded. SIPREC work in IETF standardises 
   Session Initiation Protocol(SIP) based protocol based recording where in the 
   participants are notified of the recording and have the flexibility to opt out of 
   recording. SIPREC work describes mechanisms to record both secure and non-secure media.
    Among the different architectures SIPREC supports, conference recording is one of 
    them. </t>
    
    <t>There is a trend in the industry for enterprises to use cloud
   services to host multi-party conferences and meet-me services, either
   exclusively or to meet peak loads on-demand.  The increased use of cloud services has exposed a problem.  There are two different trust domains from a media perspective: endpoints and other devices in a trusted domain, and conference servers controlled
   by the cloud service in an untrusted domain.  <xref target="I-D.jones-avtcore-private-media-reqts"/> describes the requirements for ensuring the privacy and integrity of real-time media flows between two or more endpoints
   communicating in a switched conferencing environment. The architecture suggested in <xref target="I-D.jones-avtcore-private-media-reqts"/> enables switching
   conference servers to be hosted in domains in which the network
   elements may have low trust by means of having dual-key model for media where in the media headers (like RTP/RTCP) is encrypted using one pair of keys and the media payload is 
   encrypted using a different pair of keys. This document describes requirements for recording in such a architecture.</t>
   </section>



    <section anchor="sec-term" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>

      <t>All of the pertinent terminology and taxonomy used in this
      document is based on <xref target="I-D.jones-avtcore-private-media-reqts"/>.</t>
  
       <t>In addition, this document uses the following terminology extending it 
       from <xref target="RFC6341"/>:</t>
        <t><list style="hanging">
          <t>Session Recording Server (SRS): A Session Recording Server (SRS) is a
      SIP User Agent (UA) or  webRTC endpoint <xref target="I-D.ietf-rtcweb-overview"/> or 
      a webRTC Gateway <xref target="I-D.ietf-rtcweb-gateways"/> that is a specialized 
      media server or collector that acts as the sink of the recorded media.  An SRS is
      typically implemented as a multi-port device that is capable of
      receiving media from multiple sources simultaneously.  An SRS is
      the sink of the recorded session metadata.</t>

          <t>Session Recording Client (SRC): A Session Recording Client (SRC) is a
      SIP User Agent (UA) or  webRTC endpoint <xref target="I-D.ietf-rtcweb-overview"/> or 
      a webRTC Gateway <xref target="I-D.ietf-rtcweb-gateways"/> that acts as the source of
       the recorded media, sending it to the SRS.  An SRC is a logical function.  Its
      capabilities may be implemented across one or more physical
      devices. The SRC provides metadata to the SRS.</t>

          <t>Communication Session (CS): A session created between two or more SIP
      User Agents (UAs) or webRTC endpoints or between webRTC endpoint and a webRTC 
      Gateway that is the subject of recording.</t>
      
          <t>Recording Session (RS): The session created between an SRC and
      SRS for the purpose of recording a Communication Session. This could be a SIP Session or a webRTC session. </t>
      
         <t>Metadata: Information that describes recorded media and the CS to
      which they relate.</t>
        </list></t>  
    </section>

     
    <section title="Use-cases for recording">
    <section title="Use-case 1: Conference mixer acting as SRC">
     <t><figure anchor="Figure1"
            title="Privacy Enhanced RTP Conference mixer acting as SRC">
            <artwork align="center"><![CDATA[
            
                                User 1
                            +-----------+              +----------------+
                            |           |              |   KMS          |   
                            |           |              |                |
                            |Participant|              |                |
                            |     1     |              |                |
                            |           |              +----------------+
                            +-----------+                     ^
                                ^ ^                           |
                           SRTP | |                           |
                    dual-keys   | | Signaling                 |
       User 2                   V V       Recording           v
    +-----------+           +-----------+  Session     *************
    |           |(dual-keys)|           |<------------>*           *
    |           |<-- SRTP ->| PERC      |<-SRTP->      *           *
    |Participant|<--------->| Mixer     |<-SRTP->      * Recording *
    |     2     |  Sig      |  (SRC)    |<-SRTP->      *  Server   *
    |           |  naling   |           |              *  (SRS)    *
    +-----------+           +-----------+              *************
                                 ^ ^
                                 | |
                            SRTP | | Signaling
                    (dual-keys)  | |
                                 V V
                            +-----------+
                            |           |
                            |           |
                            |Participant|
                            |    3      |
                            |           |
                            +-----------+
                               User 3

            
            ]]></artwork>
          </figure></t>
<t> In this use-case, a Privacy Enhanced RTP conference mixer is acting as SRC and recording media to a SRS. The recording Session between SRC and SRS is setup and media is forking to SRS. This model brings in requirements like authorizing PERC mixer(SRC) to fork the media, authorizing a SRS before it can get access to keys to playback the recording, getting consent from participants for recording, notifying participants of the recording.</t>

  
<t> TBD DISCUSS: SIPREC defines a mechanism to notify SIP endpoints that the call is being recorded in section 7.3 of <xref target="I-D.ietf-siprec-protocol"/> and this is done in the SIP dialog. However no such mechanism exist to notify recording for webRTC calls. Since webRTC endpoints use SDP, technically we could re-use the semantics defined in section 7.3 SIPREC protocol <xref target="I-D.ietf-siprec-protocol"/>  but the model for webRTC call recording needs to be described some where. The same goes for other aspects of recording like indicating metadata, participant preference to record.</t>

<t>TBD: Should the Recording Session between SRC and SRS be a SIP dialog (like SIPREC) only or can it be even a HTTP(webRTC) call or any other control channel ? </t>
    </section>
    
    <section title="Use-case 2: Endpoint acting as SRC">
      <t><figure anchor="Figure2"
            title="An endpoint in Privacy Enhanced RTP Conference mixer acting as SRC">
            <artwork align="center"><![CDATA[
            
                       
                             User 1
                            +-----------+              +----------------+
                            |           |              |   KMS          |   
                            |           |              |                |
                            |Participant|              |                |
                            |     1     |              |                |
                            |           |              +----------------+
                            +-----------+                     ^
                                ^ ^Signaling                  |      
                           SRTP | |                           |
                    (Dual-keys) | |                           | 
       User 2                   V V                           |
    +-----------+           +-----------+                     |
    |           |           |           |                     |
    |           |<--SRTP -->| PERC      |                     |
    |Participant|<--------->| Mixer     |                     |
    |     2     |  Sig      |           |                     |
    |           |  naling   |           |                     |
    +-----------+           +-----------+                     |
                                 ^ ^                          |
                                 | |                          |
                            SRTP | |                          |
                    (dual-keys)  | | Signaling                |       
                                 V V                          v
                            +-----------+  Session     *************
                            |           |<------------>*           *
                            |Participant|<-SRTP 1    ->*           *
                            | 3         |<-SRTP 2    ->* Recording *
                            |           |<-SRTP 3    ->*  Server   *
                            |           |              *           *
                            +-----------+              *************
                              User 3
            ]]></artwork>
          </figure></t>
          <t>One of the endpoint in the conference is acting as SRC and recording media to a SRS. The endpoint could be SIP UA  or WebRTC endpoint, a SIP B2BUA or a webRTC Gateway. The recording Session between SRC and SRS is setup and media is forking to SRS. This model brings in requirements like authorizing the endpoint in the conference to fork the media, authorizing a SRS before it can get access to keys to playback the recording, getting consent from participants for recording, notifying participants of the recording. </t>
    </section>
    </section>
           
    <section anchor="requirements" title="Requirements for recording">
    <t>This section defines requirements for recording in a PERC environment. It considers the use-cases mentioned in section 3 of this draft.</t>
    <t><list style="hanging">
    
      <t>REQ1: The mechanism MUST support the ability to have only authorized participants act as SRC and setup a Recording Session with SRS. </t>
       
       <t> REQ2: The mechanism MUST provide a way for metadata to be
      conveyed to the SRS incrementally in the Recording Session (if we are using
      SIP dialog in RS, this is already taken care by SIPREC protocol).</t>
      
      <t>REQ3: The mechanism MUST include a means for ensuring the
      confidentiality of the metadata sent from the SRC to the SRS.</t>
      
     <t>REQ4: The mechanism MUST provide a means of indicating to
       participants whether recording is taking place, for
      appropriate rendering at the user interface.
      </t>
       
       <t>REQ5: The mechanism MUST include a means for ensuring that the
      integrity and confidentiality of the media sent from the SRC to the SRS 
    </t>
    
       <t>REQ6: The mechanism MUST provide a means to have a SRS authorize itself with the KMS and get the keys needed to play back the recording. </t> 
       
       <t>REQ 7: The mechanism MUST provide a means to have participants in the conference 
       indicate their recording preference. </t>
    
     </list></t>
    </section>
    <section title="Security Considerations">
      <t>
      Session recording has substantial security implications, for the endpoints being recorded, the SRC, and the SRS.</t>

   <t>For the endpoints involved in the conference, the
   requirements in this document enable the endpoint to identify that a
   conference is being recorded and to request that a given
   conference not be subject to recording.</t>

<t>With regard to security implications of the protocol(s), clearly
   there is a need for authentication, authorization, and eavesdropping
   protection for the solution.  The SRC needs to know the SRS it is
   communicating with is legitimate, and vice versa, even if they are in
   different domains.  Both the signaling and media for the Recording
   Session need the ability to be authenticated and protected from
   eavesdropping.  Also the SRC needs to be authorized to record the conversation.
   SRS needs to authenticate itself with KMS before it can access the recordings. All these Requirements are detailed in the section 4 of this document.</t>

    </section>

    <section anchor="sec.iana-considerations" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>
    </section>

    <section title="Acknowledgments">
      <t>Lot of text for this document was taken from SIPREC Requirement RFC.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

    </references>

    <references title="Informative References">
      <?rfc include="reference.I-D.jones-avtcore-private-media-reqts"?>

      <?rfc include="reference.I-D.ietf-rtcweb-overview"?>

      <?rfc include="reference.I-D.ietf-rtcweb-gateways"?>
      
            <?rfc include="reference.I-D.ietf-siprec-protocol"?>

        <?rfc include="reference.RFC.6341"?>

    </references>
  </back>
</rfc>
